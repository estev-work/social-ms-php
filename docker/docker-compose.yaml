version: '3.7'

networks:
  social:
    driver: bridge

services:
  nginx-service:
    image: nginx:1.25.1-alpine3.17
    volumes:
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "${POST_HTTP_PORT}:80"
    depends_on:
      - post-service
    networks:
      - social

  mysql-service:
    image: mysql:8.0
    restart: unless-stopped
    tty: true
    ports:
      - "${MYSQL_HOST_PORT}:${MYSQL_DOCKER_CONTAINER_PORT}"
    volumes:
      - ./volumes/mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SERVICE_TAGS: ${TAG}
      SERVICE_NAME: mysql
    networks:
      - social

  redis-service:
    image: redis:6.0
    networks:
      - social

  post-service:
    build:
      context: ../project/post-service
      dockerfile: Dockerfile
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ../project/post-service:/var/www
    networks:
      - social

volumes:
  db-data:
